name = "chittyschema"
main = "src/worker.ts"
compatibility_date = "2024-01-01"
compatibility_flags = ["nodejs_compat"]

# Account and deployment settings
account_id = "${CLOUDFLARE_ACCOUNT_ID}"
workers_dev = false
route = { pattern = "schema.chitty.cc/*", zone_id = "${CLOUDFLARE_ZONE_ID}" }

# Environment variables
[vars]
ENVIRONMENT = "production"
SERVICE_NAME = "chittyschema"
VERSION = "2.0.0"

# Secrets (set via wrangler secret put)
# NEON_DATABASE_URL
# OPENAI_API_KEY
# ANTHROPIC_API_KEY
# JWT_SECRET
# BLOCKCHAIN_PRIVATE_KEY

# KV Namespaces
[[kv_namespaces]]
binding = "CHITTY_CACHE"
id = "${KV_NAMESPACE_ID}"
preview_id = "${KV_PREVIEW_ID}"

[[kv_namespaces]]
binding = "CHITTY_SESSIONS"
id = "${KV_SESSIONS_ID}"

# Durable Objects
[[durable_objects.bindings]]
name = "CHITTY_STATE"
class_name = "ChittyStateObject"
script_name = "chittyschema"

[[migrations]]
tag = "v1"
new_classes = ["ChittyStateObject"]

# R2 Storage
[[r2_buckets]]
binding = "CHITTY_STORAGE"
bucket_name = "chitty-evidence"
preview_bucket_name = "chitty-evidence-dev"

# D1 Database
[[d1_databases]]
binding = "CHITTY_DB"
database_name = "chitty-analytics"
database_id = "${D1_DATABASE_ID}"

# Vectorize
[[vectorize]]
binding = "CHITTY_VECTORS"
index_name = "chitty-evidence-vectors"

# AI
[ai]
binding = "AI"

# Service bindings
[[services]]
binding = "NOTION_SYNC"
service = "chitty-notion-sync"
environment = "production"

[[services]]
binding = "COOK_COUNTY"
service = "chitty-cook-county"
environment = "production"

# Browser Rendering
[browser]
binding = "BROWSER"

# Queues
[[queues.producers]]
queue = "chitty-evidence-queue"
binding = "EVIDENCE_QUEUE"

[[queues.consumers]]
queue = "chitty-evidence-queue"
max_batch_size = 10
max_batch_timeout = 30

# Analytics Engine
[[analytics_engine_datasets]]
binding = "CHITTY_ANALYTICS"
dataset = "chitty_usage"

# Build configuration
[build]
command = "npm run build"
cwd = "."
watch_paths = ["src/**/*.ts"]

[build.upload]
format = "modules"
main = "./dist/worker.js"

# Development settings
[dev]
port = 8787
local_protocol = "http"
upstream_protocol = "https"
host = "0.0.0.0"

# Limits and performance
[limits]
cpu_ms = 50
max_age = 86400

# Placement (for low-latency requirements)
[placement]
mode = "smart"

# Tail workers for logging
[[tail_consumers]]
service = "chitty-logger"

# Compatibility settings
[compatibility]
node_compat = true

# Environment-specific overrides
[env.staging]
name = "chittyschema-staging"
route = { pattern = "staging-schema.chitty.cc/*", zone_id = "${CLOUDFLARE_ZONE_ID}" }

[env.staging.vars]
ENVIRONMENT = "staging"

[env.development]
name = "chittyschema-dev"
workers_dev = true

[env.development.vars]
ENVIRONMENT = "development"