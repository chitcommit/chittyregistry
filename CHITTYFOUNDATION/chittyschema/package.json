{
  "name": "@chittyos/chittyschema",
  "version": "2.0.0",
  "type": "module",
  "private": false,
  "description": "ChittySchema - Universal data framework for ChittyOS ecosystem",
  "homepage": "https://schema.chitty.cc",
  "repository": {
    "type": "git",
    "url": "https://github.com/chittyos/chittyschema.git"
  },
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "build": "tsc -p tsconfig.json",
    "start": "node dist/index.js",
    "seed": "tsx scripts/seed.ts",
    "db:push": "tsx scripts/db_push_postgres.ts",
    "lint": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --maxWorkers=2",
    "test:qa": "tsx scripts/run-qa-suite.ts",
    "test:qa:smoke": "tsx scripts/run-qa-suite.ts --smoke",
    "test:qa:integration": "tsx scripts/run-qa-suite.ts --integration",
    "test:qa:compliance": "tsx scripts/run-qa-suite.ts --compliance",
    "test:security": "tsx scripts/run-security-audit.ts",
    "test:security:critical": "tsx scripts/run-security-audit.ts --critical",
    "test:security:high": "tsx scripts/run-security-audit.ts --high",
    "test:load": "jest tests/load/performance.test.ts --testTimeout=600000",
    "setup:notion": "tsx notion/setup-notion-databases.ts",
    "setup:notion:neutral": "tsx notion/setup-neutral-notion.ts",
    "test:notion": "tsx notion/test-procedures.ts",
    "test:notion:databases": "tsx notion/test-procedures.ts --suite=database-validation",
    "test:sync": "tsx notion/test-procedures.ts --suite=sync-integration",
    "macos:notion:init": "tsx -e \"import { createValidatedExtension } from './src/platforms/macos/extensions/notion/index.js'; const ext = createValidatedExtension(); if (ext) console.log('âœ… Mac native Notion extension validated'); else process.exit(1);\"",
    "sync": "tsx scripts/sync-cli.ts",
    "sync:init": "tsx scripts/sync-cli.ts init",
    "sync:status": "tsx scripts/sync-cli.ts status",
    "sync:trigger": "tsx scripts/sync-cli.ts trigger",
    "sync:state": "tsx scripts/sync-cli.ts state",
    "macos:notion:test": "tsx -e \"import { createValidatedExtension } from './src/platforms/macos/extensions/notion/index.js'; const ext = createValidatedExtension(); if (!ext) process.exit(1); console.log('ðŸ§ª Testing Mac native Notion extension...'); const health = await ext.healthCheck(); console.log('Health check:', health ? 'PASSED' : 'FAILED');\"",
    "macos:notion:health": "tsx -e \"import { createValidatedExtension } from './src/platforms/macos/extensions/notion/index.js'; const ext = createValidatedExtension(); if (!ext) process.exit(1); const health = await ext.healthCheck(); console.log('Health check:', health ? 'PASSED' : 'FAILED');\"",
    "sync:initial": "tsx scripts/sync-initial.ts",
    "sync:verify": "tsx scripts/sync-verify.ts",
    "sync:worker": "tsx scripts/sync-worker.ts",
    "deploy:notion": "tsx scripts/deploy-notion.ts",
    "deploy:notion:staging": "NODE_ENV=staging tsx scripts/deploy-notion.ts",
    "deploy:notion:production": "NODE_ENV=production tsx scripts/deploy-notion.ts --force",
    "deploy:pipeline-enforcement": "tsx scripts/deploy-pipeline-enforcement.ts",
    "deploy:pipeline-enforcement:staging": "NODE_ENV=staging ENFORCEMENT_LEVEL=monitor tsx scripts/deploy-pipeline-enforcement.ts",
    "deploy:pipeline-enforcement:production": "NODE_ENV=production ENFORCEMENT_LEVEL=strict ROLLOUT_STRATEGY=canary tsx scripts/deploy-pipeline-enforcement.ts",
    "deploy:development": "tsx scripts/deploy-development.ts",
    "validate:registry": "tsx scripts/validate-registry-integration.ts",
    "registry:sync": "tsx -e \"import { ChittyOSServiceRegistry } from './src/platforms/macos/core/service-registry.js'; const registry = ChittyOSServiceRegistry.getInstance(); await registry.initializeWithRegistry(); console.log('Registry sync completed');\""
  },
  "dependencies": {
    "@chittyos/chittyid-client": "^1.0.0",
    "@cloudflare/agents": "^0.0.16",
    "@jest/globals": "^30.2.0",
    "@modelcontextprotocol/sdk": "^1.19.1",
    "@notionhq/client": "^5.1.0",
    "axios": "^1.12.2",
    "chalk": "^5.6.2",
    "commander": "^14.0.1",
    "dotenv": "^16.6.1",
    "drizzle-orm": "^0.31.4",
    "express": "^4.21.2",
    "node-fetch": "^3.3.2",
    "ora": "^9.0.0",
    "pg": "^8.16.3",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/express": "^4.17.23",
    "@types/jest": "^29.5.14",
    "@types/node": "^20.19.17",
    "@types/pg": "^8.15.5",
    "@types/uuid": "^10.0.0",
    "drizzle-kit": "^0.22.0",
    "jest": "^29.7.0",
    "jest-circus": "^29.7.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "postgres": "^3.4.7",
    "ts-jest": "^29.4.4",
    "tsx": "^4.7.0",
    "typescript": "^5.4.5"
  }
}
