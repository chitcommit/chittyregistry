name: Account 121 - Clean MCP Portal CI/CD

on:
  push:
    branches: [ main, session-* ]
    paths:
      - 'CHITTYOS/chittyos-services/chittyauth/**'
      - 'CHITTYOS/chittyos-services/chittyregistry/**'
      - 'CHITTYOS/chittyos-services/chittyrouter/**'
      - 'CHITTYOS/chitty-ultimate-worker/**'
      - 'CHITTYFOUNDATION/chittyid/**'
      - 'CHITTYFOUNDATION/chittyschema/**'
      - 'chittychat/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy'
        required: true
        type: choice
        options:
          - all
          - chittyauth
          - chittyregistry
          - chittyrouter
          - chittyid
          - chittyschema
          - chittychat
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - staging
          - production

env:
  CLOUDFLARE_ACCOUNT_ID: "0bc21e3a5a9de1a4cc843be9c3e98121"  # Account 121 - Clean MCP Portal
  NODE_VERSION: "20"

jobs:
  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check Account ID Compliance
        run: |
          echo "üîç Checking for old Account 541 references..."
          if grep -r "bbf9fcd845e78035b7a135c481e88541" --include="wrangler*.toml" .; then
            echo "‚ùå ERROR: Found Account 541 (old mess account) references!"
            echo "Account 121 (0bc21e3a5a9de1a4cc843be9c3e98121) should be used instead."
            exit 1
          fi
          echo "‚úÖ No Account 541 references found"

      - name: Verify ChittyID Compliance
        run: |
          echo "üîç Running ChittyID compliance check..."
          if [ -f "chittycheck/chittycheck-enhanced.sh" ]; then
            bash chittycheck/chittycheck-enhanced.sh --ci || echo "‚ö†Ô∏è  ChittyCheck warnings detected"
          fi

  deploy-chittyauth:
    name: Deploy ChittyAuth
    needs: validate
    if: |
      (github.event.inputs.service == 'chittyauth' || github.event.inputs.service == 'all' ||
       contains(github.event.head_commit.modified, 'CHITTYOS/chittyos-services/chittyauth/'))
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: CHITTYOS/chittyos-services/chittyauth/package-lock.json

      - name: Install dependencies
        working-directory: CHITTYOS/chittyos-services/chittyauth
        run: npm ci

      - name: Deploy to Cloudflare Workers
        working-directory: CHITTYOS/chittyos-services/chittyauth
        run: npx wrangler deploy --env ${{ github.event.inputs.environment || 'staging' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_121 }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}

  deploy-chittyregistry:
    name: Deploy ChittyRegistry
    needs: validate
    if: |
      (github.event.inputs.service == 'chittyregistry' || github.event.inputs.service == 'all' ||
       contains(github.event.head_commit.modified, 'CHITTYOS/chittyos-services/chittyregistry/'))
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: CHITTYOS/chittyos-services/chittyregistry/package-lock.json

      - name: Install dependencies
        working-directory: CHITTYOS/chittyos-services/chittyregistry
        run: npm ci

      - name: Deploy to Cloudflare Workers
        working-directory: CHITTYOS/chittyos-services/chittyregistry
        run: npx wrangler deploy --env ${{ github.event.inputs.environment || 'staging' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_121 }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}

  deploy-chittyrouter:
    name: Deploy ChittyRouter Ultimate Worker
    needs: validate
    if: |
      (github.event.inputs.service == 'chittyrouter' || github.event.inputs.service == 'all' ||
       contains(github.event.head_commit.modified, 'CHITTYOS/chittyos-services/chittyrouter/'))
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: CHITTYOS/chittyos-services/chittyrouter/package-lock.json

      - name: Install dependencies
        working-directory: CHITTYOS/chittyos-services/chittyrouter
        run: npm ci

      - name: Deploy to Cloudflare Workers
        working-directory: CHITTYOS/chittyos-services/chittyrouter
        run: npx wrangler deploy --env ${{ github.event.inputs.environment || 'staging' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_121 }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}

  deploy-chittyid:
    name: Deploy ChittyID Foundation
    needs: validate
    if: |
      (github.event.inputs.service == 'chittyid' || github.event.inputs.service == 'all' ||
       contains(github.event.head_commit.modified, 'CHITTYFOUNDATION/chittyid/'))
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: CHITTYFOUNDATION/chittyid/package-lock.json

      - name: Install dependencies
        working-directory: CHITTYFOUNDATION/chittyid
        run: npm ci

      - name: Deploy to Cloudflare Workers
        working-directory: CHITTYFOUNDATION/chittyid
        run: npx wrangler deploy --env ${{ github.event.inputs.environment || 'staging' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_121 }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}

  deploy-chittyschema:
    name: Deploy ChittySchema MCP
    needs: validate
    if: |
      (github.event.inputs.service == 'chittyschema' || github.event.inputs.service == 'all' ||
       contains(github.event.head_commit.modified, 'CHITTYFOUNDATION/chittyschema/'))
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: CHITTYFOUNDATION/chittyschema/package-lock.json

      - name: Install dependencies
        working-directory: CHITTYFOUNDATION/chittyschema
        run: npm ci

      - name: Deploy MCP Agent to Cloudflare Workers
        working-directory: CHITTYFOUNDATION/chittyschema
        run: npx wrangler deploy --config wrangler.mcp-minimal.toml
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_121 }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}

  deploy-chittychat:
    name: Deploy ChittyChat Platform
    needs: validate
    if: |
      (github.event.inputs.service == 'chittychat' || github.event.inputs.service == 'all' ||
       contains(github.event.head_commit.modified, 'chittychat/'))
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: chittychat/package-lock.json

      - name: Install dependencies
        working-directory: chittychat
        run: npm ci

      - name: Deploy to Cloudflare Workers
        working-directory: chittychat
        run: npx wrangler deploy --config wrangler.optimized.toml --env ${{ github.event.inputs.environment || 'staging' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN_121 }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}

  notify-registry:
    name: Notify ChittyOS Registry
    needs: [deploy-chittyauth, deploy-chittyregistry, deploy-chittyrouter, deploy-chittyid, deploy-chittyschema, deploy-chittychat]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send deployment notification
        run: |
          curl -X POST https://gateway.chitty.cc/api/v1/registry/deployment \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CHITTY_ID_TOKEN }}" \
            -d '{
              "account": "Account-121-Clean-MCP-Portal",
              "accountId": "0bc21e3a5a9de1a4cc843be9c3e98121",
              "email": "nick@chittycorp.com",
              "environment": "${{ github.event.inputs.environment || 'staging' }}",
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
              "workflow": "${{ github.workflow }}",
              "runId": "${{ github.run_id }}"
            }'
        continue-on-error: true
